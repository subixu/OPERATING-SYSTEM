#include <stdio.h>
int main() {
    int n, m, i, j, k;
    printf("Enter processes and resources: ");
    scanf("%d %d", &n, &m);
    int alloc[n][m], max[n][m], avail[m], f[n], ans[n], ind = 0;

    printf("Enter allocation matrix:\n");
    for(i = 0; i < n; i++)
        for(j = 0; j < m; j++)
            scanf("%d", &alloc[i][j]);

    printf("Enter max matrix:\n");
    for(i = 0; i < n; i++)
        for(j = 0; j < m; j++)
            scanf("%d", &max[i][j]);

    printf("Enter available resources:\n");
    for(i = 0; i < m; i++)
        scanf("%d", &avail[i]);

    for(k = 0; k < n; k++) f[k] = 0;

    int need[n][m];
    for(i = 0; i < n; i++)
        for(j = 0; j < m; j++)
            need[i][j] = max[i][j] - alloc[i][j];

    for(k = 0; k < n*n; k++) {
        for(i = 0; i < n; i++) {
            if(f[i] == 0) {
                int flag = 1;
                for(j = 0; j < m; j++)
                    if(need[i][j] > avail[j]) {
                        flag = 0; break;
                    }
                if(flag) {
                    for(j = 0; j < m; j++)
                        avail[j] += alloc[i][j];
                    ans[ind++] = i;
                    f[i] = 1;
                }
            }
        }
    }

    if(ind == n) {
        printf("Safe sequence: ");
        for(i = 0; i < n; i++)
            printf("P%d ", ans[i]);
    } else {
        printf("Deadlock detected.\n");
    }
    return 0;
}
