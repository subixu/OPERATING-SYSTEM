#include <stdio.h>

struct Process {
    int id;
    int bt;
    int priority;
    int wt;
    int tat;
};
void sortByPriority(struct Process p[], int n) {
    struct Process temp;
    for(int i=0; i<n-1; i++) {
        for(int j=0; j<n-i-1; j++) {
            if(p[j].priority > p[j+1].priority) {
                temp = p[j];
                p[j] = p[j+1];
                p[j+1] = temp;
            }
        }
    }
}

int main() {
    int n;
    printf("Enter number of processes: ");
    scanf("%d", &n);

    struct Process p[n];

    for(int i=0; i<n; i++) {
        p[i].id = i+1;
        printf("Enter burst time and priority for Process %d: ", i+1);
        scanf("%d %d", &p[i].bt, &p[i].priority);
    }

    sortByPriority(p, n);

    p[0].wt = 0;
    for(int i=1; i<n; i++) {
        p[i].wt = p[i-1].wt + p[i-1].bt;
    }

    float totalWT = 0, totalTAT = 0;

    printf("\nProcess\tBT\tPriority\tWT\tTAT\n");
    for(int i=0; i<n; i++) {
        p[i].tat = p[i].bt + p[i].wt;
        totalWT += p[i].wt;
        totalTAT += p[i].tat;
        printf("P%d\t%d\t%d\t\t%d\t%d\n", p[i].id, p[i].bt, p[i].priority, p[i].wt, p[i].tat);
    }

    printf("\nAverage Waiting Time = %.2f", totalWT/n);
    printf("\nAverage Turnaround Time = %.2f\n", totalTAT/n);

    return 0;
}
